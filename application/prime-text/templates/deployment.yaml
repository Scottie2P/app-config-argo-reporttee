{{- $root := . -}}
{{- range $key, $value := .Values.components }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prime-text.fullname" $ }}-{{ $key }}
  labels:
    {{- include "prime-text.labels" $ | nindent 4 }}
    datawow.io/component: {{ $key }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      {{- include "prime-text.selectorLabels" $ | nindent 6 }}
      datawow.io/component: {{ $key }}
  template:
    metadata:
      labels:
        {{- include "prime-text.selectorLabels" $ | nindent 8 }}
        datawow.io/component: {{ $key }}
    spec:
      {{- with $root.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $root.Chart.Name }}
          image: "{{ .image.repository }}:{{ .image.sha }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          {{- if .command }}
          command:
            {{- range .command }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .args }}
          args:
            {{- range .args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .env }}
            {{- toYaml .env | nindent 12 }}
            {{- end }}
            {{- if $root.Values.environmentVariables }}
            {{- range $envname, $envvalue := $root.Values.environmentVariables }}
            {{- range $envvalue.keys }}
            - name: {{ . }}
              {{- if eq $envvalue.type "secret" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $envname }}
                  key: {{ . }}
              {{- else if eq $envvalue.type "configmap" }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $envname }}
                  key: {{ . }}
              {{- else }}
              {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range $envname, $envvalue := .environmentVariables }}
            {{- range $envvalue.keys }}
            - name: {{ . }}
              {{- if eq $envvalue.type "secret" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $envname }}
                  key: {{ . }}
              {{- else if eq $envvalue.type "configmap" }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $envname }}
                  key: {{ . }}
              {{- else }}
              {{- end }}
            {{- end }}
            {{- end }}
          {{- with .ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .topologySpreadConstraints.enabled }}
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            {{- include "prime-text.selectorLabels" $ | nindent 12 }}
            datawow.io/component: {{ $key }}
        maxSkew: {{ .topologySpreadConstraints.maxSkew }}
        topologyKey: {{ .topologySpreadConstraints.topologyKey }}
        whenUnsatisfiable: DoNotSchedule
      {{- end }}
---
{{- end }}
